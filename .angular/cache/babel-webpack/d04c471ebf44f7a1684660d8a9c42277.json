{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport var CoreTranslationService = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {TranslateService} _translateService\r\n   */\n  function CoreTranslationService(_translateService) {\n    _classCallCheck(this, CoreTranslationService);\n\n    this._translateService = _translateService;\n  } // Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\r\n   * Translate\r\n   *\r\n   * @param {Locale} args\r\n   */\n\n\n  _createClass(CoreTranslationService, [{\n    key: \"translate\",\n    value: function translate() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var locales = [].concat(args);\n      locales.forEach(function (locale) {\n        // use setTranslation() with the third argument value as true to append translations instead of replacing them\n        _this._translateService.setTranslation(locale.lang, locale.data, true);\n      });\n    }\n  }]);\n\n  return CoreTranslationService;\n}();\n\nCoreTranslationService.ɵfac = function CoreTranslationService_Factory(t) {\n  return new (t || CoreTranslationService)(i0.ɵɵinject(i1.TranslateService));\n};\n\nCoreTranslationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoreTranslationService,\n  factory: CoreTranslationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/@core/services/translation.service.ts"],"names":["i0","i1","CoreTranslationService","_translateService","args","locales","forEach","locale","setTranslation","lang","data","ɵfac","CoreTranslationService_Factory","t","ɵɵinject","TranslateService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,WAAaC,sBAAb;AACI;AACJ;AACA;AACA;AACA;AACI,kCAAYC,iBAAZ,EAA+B;AAAA;;AAC3B,SAAKA,iBAAL,GAAyBA,iBAAzB;AACH,GARL,CASI;AACA;;AACA;AACJ;AACA;AACA;AACA;;;AAfA;AAAA;AAAA,WAgBI,qBAAmB;AAAA;;AAAA,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACf,UAAMC,OAAO,aAAOD,IAAP,CAAb;AACAC,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtB;AACA,QAAA,KAAI,CAACJ,iBAAL,CAAuBK,cAAvB,CAAsCD,MAAM,CAACE,IAA7C,EAAmDF,MAAM,CAACG,IAA1D,EAAgE,IAAhE;AACH,OAHD;AAIH;AAtBL;;AAAA;AAAA;;AAwBAR,sBAAsB,CAACS,IAAvB,GAA8B,SAASC,8BAAT,CAAwCC,CAAxC,EAA2C;AAAE,SAAO,KAAKA,CAAC,IAAIX,sBAAV,EAAkCF,EAAE,CAACc,QAAH,CAAYb,EAAE,CAACc,gBAAf,CAAlC,CAAP;AAA6E,CAAxJ;;AACAb,sBAAsB,CAACc,KAAvB,GAA+B,aAAchB,EAAE,CAACiB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEhB,sBAAT;AAAiCiB,EAAAA,OAAO,EAAEjB,sBAAsB,CAACS,IAAjE;AAAuES,EAAAA,UAAU,EAAE;AAAnF,CAAtB,CAA7C","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@ngx-translate/core\";\r\nexport class CoreTranslationService {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TranslateService} _translateService\r\n     */\r\n    constructor(_translateService) {\r\n        this._translateService = _translateService;\r\n    }\r\n    // Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n    /**\r\n     * Translate\r\n     *\r\n     * @param {Locale} args\r\n     */\r\n    translate(...args) {\r\n        const locales = [...args];\r\n        locales.forEach(locale => {\r\n            // use setTranslation() with the third argument value as true to append translations instead of replacing them\r\n            this._translateService.setTranslation(locale.lang, locale.data, true);\r\n        });\r\n    }\r\n}\r\nCoreTranslationService.ɵfac = function CoreTranslationService_Factory(t) { return new (t || CoreTranslationService)(i0.ɵɵinject(i1.TranslateService)); };\r\nCoreTranslationService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CoreTranslationService, factory: CoreTranslationService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}