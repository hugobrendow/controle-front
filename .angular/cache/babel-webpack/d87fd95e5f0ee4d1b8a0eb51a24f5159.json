{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var InvoiceAddService = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {HttpClient} _httpClient\r\n   */\n  function InvoiceAddService(_httpClient) {\n    _classCallCheck(this, InvoiceAddService);\n\n    this._httpClient = _httpClient; // Set the defaults\n\n    this.onInvoicAddChanged = new BehaviorSubject({});\n  }\n  /**\r\n   * Resolver\r\n   *\r\n   * @param {ActivatedRouteSnapshot} route\r\n   * @param {RouterStateSnapshot} state\r\n   * @returns {Observable<any> | Promise<any> | any}\r\n   */\n\n\n  _createClass(InvoiceAddService, [{\n    key: \"resolve\",\n    value: function resolve(route, state) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        Promise.all([_this.getApiData()]).then(function () {\n          resolve();\n        }, reject);\n      });\n    }\n    /**\r\n     * Get API Data\r\n     */\n\n  }, {\n    key: \"getApiData\",\n    value: function getApiData() {\n      var _this2 = this;\n\n      var url = \"api/invoice-data\";\n      return new Promise(function (resolve, reject) {\n        _this2._httpClient.get(url).subscribe(function (response) {\n          _this2.apiData = response;\n\n          _this2.onInvoicAddChanged.next(_this2.apiData);\n\n          resolve(_this2.apiData);\n        }, reject);\n      });\n    }\n  }]);\n\n  return InvoiceAddService;\n}();\n\nInvoiceAddService.ɵfac = function InvoiceAddService_Factory(t) {\n  return new (t || InvoiceAddService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nInvoiceAddService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InvoiceAddService,\n  factory: InvoiceAddService.ɵfac\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/app/main/provider/save-provider/invoice-add.service.ts"],"names":["BehaviorSubject","i0","i1","InvoiceAddService","_httpClient","onInvoicAddChanged","route","state","Promise","resolve","reject","all","getApiData","then","url","get","subscribe","response","apiData","next","ɵfac","InvoiceAddService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,iBAAb;AACI;AACJ;AACA;AACA;AACA;AACI,6BAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;;AACA,SAAKC,kBAAL,GAA0B,IAAIL,eAAJ,CAAoB,EAApB,CAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAjBA;AAAA;AAAA,WAkBI,iBAAQM,KAAR,EAAeC,KAAf,EAAsB;AAAA;;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCF,QAAAA,OAAO,CAACG,GAAR,CAAY,CAAC,KAAI,CAACC,UAAL,EAAD,CAAZ,EAAiCC,IAAjC,CAAsC,YAAM;AACxCJ,UAAAA,OAAO;AACV,SAFD,EAEGC,MAFH;AAGH,OAJM,CAAP;AAKH;AACD;AACJ;AACA;;AA3BA;AAAA;AAAA,WA4BI,sBAAa;AAAA;;AACT,UAAMI,GAAG,qBAAT;AACA,aAAO,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,MAAI,CAACN,WAAL,CAAiBW,GAAjB,CAAqBD,GAArB,EAA0BE,SAA1B,CAAoC,UAACC,QAAD,EAAc;AAC9C,UAAA,MAAI,CAACC,OAAL,GAAeD,QAAf;;AACA,UAAA,MAAI,CAACZ,kBAAL,CAAwBc,IAAxB,CAA6B,MAAI,CAACD,OAAlC;;AACAT,UAAAA,OAAO,CAAC,MAAI,CAACS,OAAN,CAAP;AACH,SAJD,EAIGR,MAJH;AAKH,OANM,CAAP;AAOH;AArCL;;AAAA;AAAA;;AAuCAP,iBAAiB,CAACiB,IAAlB,GAAyB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAInB,iBAAV,EAA6BF,EAAE,CAACsB,QAAH,CAAYrB,EAAE,CAACsB,UAAf,CAA7B,CAAP;AAAkE,CAAnI;;AACArB,iBAAiB,CAACsB,KAAlB,GAA0B,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,iBAAT;AAA4ByB,EAAAA,OAAO,EAAEzB,iBAAiB,CAACiB;AAAvD,CAAtB,CAAxC","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class InvoiceAddService {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(_httpClient) {\r\n        this._httpClient = _httpClient;\r\n        // Set the defaults\r\n        this.onInvoicAddChanged = new BehaviorSubject({});\r\n    }\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route, state) {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([this.getApiData()]).then(() => {\r\n                resolve();\r\n            }, reject);\r\n        });\r\n    }\r\n    /**\r\n     * Get API Data\r\n     */\r\n    getApiData() {\r\n        const url = `api/invoice-data`;\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url).subscribe((response) => {\r\n                this.apiData = response;\r\n                this.onInvoicAddChanged.next(this.apiData);\r\n                resolve(this.apiData);\r\n            }, reject);\r\n        });\r\n    }\r\n}\r\nInvoiceAddService.ɵfac = function InvoiceAddService_Factory(t) { return new (t || InvoiceAddService)(i0.ɵɵinject(i1.HttpClient)); };\r\nInvoiceAddService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: InvoiceAddService, factory: InvoiceAddService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}