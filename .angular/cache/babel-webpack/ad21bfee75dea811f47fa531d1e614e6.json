{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var SearchService = /*#__PURE__*/function () {\n  /**\r\n   *\r\n   * @param {HttpClient} _httpClient\r\n   */\n  function SearchService(_httpClient) {\n    _classCallCheck(this, SearchService);\n\n    this._httpClient = _httpClient; // Public\n\n    this.search = '';\n    this.apiData = [];\n    this.onApiDataChange = new BehaviorSubject('');\n    this.onIsBookmarkOpenChange = new BehaviorSubject(false);\n    this.getSearchData();\n  }\n  /**\r\n   * Get Search Data\r\n   */\n\n\n  _createClass(SearchService, [{\n    key: \"getSearchData\",\n    value: function getSearchData() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._httpClient.get('api/search-data').subscribe(function (response) {\n          _this.apiData = response;\n\n          _this.onApiDataChange.next(_this.apiData);\n\n          resolve(_this.apiData);\n        }, reject);\n      });\n    }\n  }]);\n\n  return SearchService;\n}();\n\nSearchService.ɵfac = function SearchService_Factory(t) {\n  return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nSearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SearchService,\n  factory: SearchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/app/layout/components/navbar/navbar-search/search.service.ts"],"names":["BehaviorSubject","i0","i1","SearchService","_httpClient","search","apiData","onApiDataChange","onIsBookmarkOpenChange","getSearchData","Promise","resolve","reject","get","subscribe","response","next","ɵfac","SearchService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,aAAb;AACI;AACJ;AACA;AACA;AACI,yBAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,IAAIP,eAAJ,CAAoB,EAApB,CAAvB;AACA,SAAKQ,sBAAL,GAA8B,IAAIR,eAAJ,CAAoB,KAApB,CAA9B;AACA,SAAKS,aAAL;AACH;AACD;AACJ;AACA;;;AAhBA;AAAA;AAAA,WAiBI,yBAAgB;AAAA;;AACZ,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,KAAI,CAACR,WAAL,CAAiBS,GAAjB,CAAqB,iBAArB,EAAwCC,SAAxC,CAAkD,UAACC,QAAD,EAAc;AAC5D,UAAA,KAAI,CAACT,OAAL,GAAeS,QAAf;;AACA,UAAA,KAAI,CAACR,eAAL,CAAqBS,IAArB,CAA0B,KAAI,CAACV,OAA/B;;AACAK,UAAAA,OAAO,CAAC,KAAI,CAACL,OAAN,CAAP;AACH,SAJD,EAIGM,MAJH;AAKH,OANM,CAAP;AAOH;AAzBL;;AAAA;AAAA;;AA2BAT,aAAa,CAACc,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIhB,aAAV,EAAyBF,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,UAAf,CAAzB,CAAP;AAA8D,CAAvH;;AACAlB,aAAa,CAACmB,KAAd,GAAsB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,aAAT;AAAwBsB,EAAAA,OAAO,EAAEtB,aAAa,CAACc,IAA/C;AAAqDS,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class SearchService {\r\n    /**\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(_httpClient) {\r\n        this._httpClient = _httpClient;\r\n        // Public\r\n        this.search = '';\r\n        this.apiData = [];\r\n        this.onApiDataChange = new BehaviorSubject('');\r\n        this.onIsBookmarkOpenChange = new BehaviorSubject(false);\r\n        this.getSearchData();\r\n    }\r\n    /**\r\n     * Get Search Data\r\n     */\r\n    getSearchData() {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/search-data').subscribe((response) => {\r\n                this.apiData = response;\r\n                this.onApiDataChange.next(this.apiData);\r\n                resolve(this.apiData);\r\n            }, reject);\r\n        });\r\n    }\r\n}\r\nSearchService.ɵfac = function SearchService_Factory(t) { return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient)); };\r\nSearchService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SearchService, factory: SearchService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}