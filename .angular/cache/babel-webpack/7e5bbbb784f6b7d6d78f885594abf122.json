{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var NotificationsService = /*#__PURE__*/function () {\n  /**\r\n   *\r\n   * @param {HttpClient} _httpClient\r\n   */\n  function NotificationsService(_httpClient) {\n    _classCallCheck(this, NotificationsService);\n\n    this._httpClient = _httpClient; // Public\n\n    this.apiData = [];\n    this.onApiDataChange = new BehaviorSubject('');\n    this.getNotificationsData();\n  }\n  /**\r\n   * Get Notifications Data\r\n   */\n\n\n  _createClass(NotificationsService, [{\n    key: \"getNotificationsData\",\n    value: function getNotificationsData() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._httpClient.get('api/notifications-data').subscribe(function (response) {\n          _this.apiData = response;\n\n          _this.onApiDataChange.next(_this.apiData);\n\n          resolve(_this.apiData);\n        }, reject);\n      });\n    }\n  }]);\n\n  return NotificationsService;\n}();\n\nNotificationsService.ɵfac = function NotificationsService_Factory(t) {\n  return new (t || NotificationsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nNotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotificationsService,\n  factory: NotificationsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/app/layout/components/navbar/navbar-notification/notifications.service.ts"],"names":["BehaviorSubject","i0","i1","NotificationsService","_httpClient","apiData","onApiDataChange","getNotificationsData","Promise","resolve","reject","get","subscribe","response","next","ɵfac","NotificationsService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,oBAAb;AACI;AACJ;AACA;AACA;AACI,gCAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,IAAIN,eAAJ,CAAoB,EAApB,CAAvB;AACA,SAAKO,oBAAL;AACH;AACD;AACJ;AACA;;;AAdA;AAAA;AAAA,WAeI,gCAAuB;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,KAAI,CAACN,WAAL,CAAiBO,GAAjB,CAAqB,wBAArB,EAA+CC,SAA/C,CAAyD,UAACC,QAAD,EAAc;AACnE,UAAA,KAAI,CAACR,OAAL,GAAeQ,QAAf;;AACA,UAAA,KAAI,CAACP,eAAL,CAAqBQ,IAArB,CAA0B,KAAI,CAACT,OAA/B;;AACAI,UAAAA,OAAO,CAAC,KAAI,CAACJ,OAAN,CAAP;AACH,SAJD,EAIGK,MAJH;AAKH,OANM,CAAP;AAOH;AAvBL;;AAAA;AAAA;;AAyBAP,oBAAoB,CAACY,IAArB,GAA4B,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AAAE,SAAO,KAAKA,CAAC,IAAId,oBAAV,EAAgCF,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,UAAf,CAAhC,CAAP;AAAqE,CAA5I;;AACAhB,oBAAoB,CAACiB,KAArB,GAA6B,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnB,oBAAT;AAA+BoB,EAAAA,OAAO,EAAEpB,oBAAoB,CAACY,IAA7D;AAAmES,EAAAA,UAAU,EAAE;AAA/E,CAAtB,CAA3C","sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class NotificationsService {\r\n    /**\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(_httpClient) {\r\n        this._httpClient = _httpClient;\r\n        // Public\r\n        this.apiData = [];\r\n        this.onApiDataChange = new BehaviorSubject('');\r\n        this.getNotificationsData();\r\n    }\r\n    /**\r\n     * Get Notifications Data\r\n     */\r\n    getNotificationsData() {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/notifications-data').subscribe((response) => {\r\n                this.apiData = response;\r\n                this.onApiDataChange.next(this.apiData);\r\n                resolve(this.apiData);\r\n            }, reject);\r\n        });\r\n    }\r\n}\r\nNotificationsService.ɵfac = function NotificationsService_Factory(t) { return new (t || NotificationsService)(i0.ɵɵinject(i1.HttpClient)); };\r\nNotificationsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: NotificationsService, factory: NotificationsService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}