{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as Waves from 'node-waves';\nimport * as i0 from \"@angular/core\";\nexport var RippleEffectDirective = /*#__PURE__*/function () {\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {ElementRef} _elementRef\r\n   */\n  function RippleEffectDirective(_elementRef) {\n    _classCallCheck(this, RippleEffectDirective);\n\n    this._elementRef = _elementRef;\n  }\n\n  _createClass(RippleEffectDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // Get the native element\n      this._nativeElement = this._elementRef.nativeElement;\n\n      if ( // Attach ripple with light style i.e solid variant of button\n      !this._nativeElement.className.split(' ').some(function (c) {\n        return /btn-outline-.*/.test(c);\n      }) && !this._nativeElement.className.split(' ').some(function (c) {\n        return /btn-flat-.*/.test(c);\n      })) {\n        Waves.attach(this._nativeElement, ['waves-float', 'waves-light']);\n      } else {\n        // Attach ripple with transparent style i.e flat, outline variant of button\n        Waves.attach(this._nativeElement);\n      }\n    }\n  }]);\n\n  return RippleEffectDirective;\n}();\n\nRippleEffectDirective.ɵfac = function RippleEffectDirective_Factory(t) {\n  return new (t || RippleEffectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nRippleEffectDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: RippleEffectDirective,\n  selectors: [[\"\", \"rippleEffect\", \"\"]],\n  inputs: {\n    wave: \"wave\"\n  }\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/@core/directives/core-ripple-effect/core-ripple-effect.directive.ts"],"names":["Waves","i0","RippleEffectDirective","_elementRef","_nativeElement","nativeElement","className","split","some","c","test","attach","ɵfac","RippleEffectDirective_Factory","t","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","type","selectors","inputs","wave"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,WAAaC,qBAAb;AACI;AACJ;AACA;AACA;AACA;AACI,iCAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AARL;AAAA;AAAA,WASI,oBAAW;AACP;AACA,WAAKC,cAAL,GAAsB,KAAKD,WAAL,CAAiBE,aAAvC;;AACA,WACA;AACA,OAAC,KAAKD,cAAL,CAAoBE,SAApB,CAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,IAAzC,CAA8C,UAAUC,CAAV,EAAa;AACxD,eAAO,iBAAiBC,IAAjB,CAAsBD,CAAtB,CAAP;AACH,OAFA,CAAD,IAGI,CAAC,KAAKL,cAAL,CAAoBE,SAApB,CAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,IAAzC,CAA8C,UAAUC,CAAV,EAAa;AACxD,eAAO,cAAcC,IAAd,CAAmBD,CAAnB,CAAP;AACH,OAFA,CALL,EAOQ;AACJT,QAAAA,KAAK,CAACW,MAAN,CAAa,KAAKP,cAAlB,EAAkC,CAAC,aAAD,EAAgB,aAAhB,CAAlC;AACH,OATD,MAUK;AACD;AACAJ,QAAAA,KAAK,CAACW,MAAN,CAAa,KAAKP,cAAlB;AACH;AACJ;AA1BL;;AAAA;AAAA;;AA4BAF,qBAAqB,CAACU,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,SAAO,KAAKA,CAAC,IAAIZ,qBAAV,EAAiCD,EAAE,CAACc,iBAAH,CAAqBd,EAAE,CAACe,UAAxB,CAAjC,CAAP;AAA+E,CAAxJ;;AACAd,qBAAqB,CAACe,IAAtB,GAA6B,aAAchB,EAAE,CAACiB,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEjB,qBAAR;AAA+BkB,EAAAA,SAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAA1C;AAAsEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR;AAA9E,CAArB,CAA3C","sourcesContent":["import * as Waves from 'node-waves';\r\nimport * as i0 from \"@angular/core\";\r\nexport class RippleEffectDirective {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ElementRef} _elementRef\r\n     */\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n    ngOnInit() {\r\n        // Get the native element\r\n        this._nativeElement = this._elementRef.nativeElement;\r\n        if (\r\n        // Attach ripple with light style i.e solid variant of button\r\n        !this._nativeElement.className.split(' ').some(function (c) {\r\n            return /btn-outline-.*/.test(c);\r\n        }) &&\r\n            !this._nativeElement.className.split(' ').some(function (c) {\r\n                return /btn-flat-.*/.test(c);\r\n            })) {\r\n            Waves.attach(this._nativeElement, ['waves-float', 'waves-light']);\r\n        }\r\n        else {\r\n            // Attach ripple with transparent style i.e flat, outline variant of button\r\n            Waves.attach(this._nativeElement);\r\n        }\r\n    }\r\n}\r\nRippleEffectDirective.ɵfac = function RippleEffectDirective_Factory(t) { return new (t || RippleEffectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nRippleEffectDirective.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: RippleEffectDirective, selectors: [[\"\", \"rippleEffect\", \"\"]], inputs: { wave: \"wave\" } });\r\n"]},"metadata":{},"sourceType":"module"}