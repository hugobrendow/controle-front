{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var UserService = /*#__PURE__*/function () {\n  /**\r\n   *\r\n   * @param {HttpClient} _http\r\n   */\n  function UserService(_http) {\n    _classCallCheck(this, UserService);\n\n    this._http = _http;\n  }\n  /**\r\n   * Get all users\r\n   */\n\n\n  _createClass(UserService, [{\n    key: \"getAll\",\n    value: function getAll() {\n      return this._http.get(\"\".concat(environment.apiUrl, \"/users\"));\n    }\n    /**\r\n     * Get user by id\r\n     */\n\n  }, {\n    key: \"getById\",\n    value: function getById(id) {\n      return this._http.get(\"\".concat(environment.apiUrl, \"/users/\").concat(id));\n    }\n  }]);\n\n  return UserService;\n}();\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/app/auth/service/user.service.ts"],"names":["environment","i0","i1","UserService","_http","get","apiUrl","id","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,0BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,WAAaC,WAAb;AACI;AACJ;AACA;AACA;AACI,uBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;;;AAVA;AAAA;AAAA,WAWI,kBAAS;AACL,aAAO,KAAKA,KAAL,CAAWC,GAAX,WAAkBL,WAAW,CAACM,MAA9B,YAAP;AACH;AACD;AACJ;AACA;;AAhBA;AAAA;AAAA,WAiBI,iBAAQC,EAAR,EAAY;AACR,aAAO,KAAKH,KAAL,CAAWC,GAAX,WAAkBL,WAAW,CAACM,MAA9B,oBAA8CC,EAA9C,EAAP;AACH;AAnBL;;AAAA;AAAA;;AAqBAJ,WAAW,CAACK,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIP,WAAV,EAAuBF,EAAE,CAACU,QAAH,CAAYT,EAAE,CAACU,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAT,WAAW,CAACU,KAAZ,GAAoB,aAAcZ,EAAE,CAACa,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEZ,WAAT;AAAsBa,EAAAA,OAAO,EAAEb,WAAW,CAACK,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { environment } from 'environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserService {\r\n    /**\r\n     *\r\n     * @param {HttpClient} _http\r\n     */\r\n    constructor(_http) {\r\n        this._http = _http;\r\n    }\r\n    /**\r\n     * Get all users\r\n     */\r\n    getAll() {\r\n        return this._http.get(`${environment.apiUrl}/users`);\r\n    }\r\n    /**\r\n     * Get user by id\r\n     */\r\n    getById(id) {\r\n        return this._http.get(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}