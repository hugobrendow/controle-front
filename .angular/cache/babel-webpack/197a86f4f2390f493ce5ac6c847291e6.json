{"ast":null,"code":"import _classCallCheck from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hugob/projetos/origem/novo-portal/controle-origem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from \"@angular/core\";\nexport var CoreSidebarService = /*#__PURE__*/function () {\n  function CoreSidebarService() {\n    _classCallCheck(this, CoreSidebarService);\n\n    // Private\n    this._registry = {};\n  }\n  /**\r\n   * Get the sidebar with the given key\r\n   *\r\n   * @param key\r\n   * @returns {CoreSidebarComponent}\r\n   */\n\n\n  _createClass(CoreSidebarService, [{\n    key: \"getSidebarRegistry\",\n    value: function getSidebarRegistry(key) {\n      // Check if the sidebar registered\n      if (!this._registry[key]) {\n        console.warn(\"The sidebar with the key '\".concat(key, \"' doesn't exist in the registry.\"));\n        return;\n      } // Return the sidebar\n\n\n      return this._registry[key];\n    }\n    /**\r\n     * Set the sidebar to the registry\r\n     *\r\n     * @param key\r\n     * @param sidebar\r\n     */\n\n  }, {\n    key: \"setSidebarRegistry\",\n    value: function setSidebarRegistry(key, sidebar) {\n      // Check if the key already being used\n      if (this._registry[key]) {\n        console.error(\"The sidebar with the key '\".concat(key, \"' already exists. Either unregister it first or use a unique key.\"));\n        return;\n      } // Set to the registry\n\n\n      this._registry[key] = sidebar;\n    }\n    /**\r\n     * Remove the sidebar from the registry\r\n     *\r\n     * @param key\r\n     */\n\n  }, {\n    key: \"removeSidebarRegistry\",\n    value: function removeSidebarRegistry(key) {\n      // Check if the sidebar registered\n      if (!this._registry[key]) {\n        console.warn(\"The sidebar with the key '\".concat(key, \"' doesn't exist in the registry.\"));\n      } // Unregister the sidebar\n\n\n      delete this._registry[key];\n    }\n  }]);\n\n  return CoreSidebarService;\n}();\n\nCoreSidebarService.ɵfac = function CoreSidebarService_Factory(t) {\n  return new (t || CoreSidebarService)();\n};\n\nCoreSidebarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoreSidebarService,\n  factory: CoreSidebarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/hugob/projetos/origem/novo-portal/controle-origem/src/@core/components/core-sidebar/core-sidebar.service.ts"],"names":["i0","CoreSidebarService","_registry","key","console","warn","sidebar","error","ɵfac","CoreSidebarService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,WAAaC,kBAAb;AACI,gCAAc;AAAA;;AACV;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAVA;AAAA;AAAA,WAWI,4BAAmBC,GAAnB,EAAwB;AACpB;AACA,UAAI,CAAC,KAAKD,SAAL,CAAeC,GAAf,CAAL,EAA0B;AACtBC,QAAAA,OAAO,CAACC,IAAR,qCAA0CF,GAA1C;AACA;AACH,OALmB,CAMpB;;;AACA,aAAO,KAAKD,SAAL,CAAeC,GAAf,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;AAzBA;AAAA;AAAA,WA0BI,4BAAmBA,GAAnB,EAAwBG,OAAxB,EAAiC;AAC7B;AACA,UAAI,KAAKJ,SAAL,CAAeC,GAAf,CAAJ,EAAyB;AACrBC,QAAAA,OAAO,CAACG,KAAR,qCAA2CJ,GAA3C;AACA;AACH,OAL4B,CAM7B;;;AACA,WAAKD,SAAL,CAAeC,GAAf,IAAsBG,OAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;;AAvCA;AAAA;AAAA,WAwCI,+BAAsBH,GAAtB,EAA2B;AACvB;AACA,UAAI,CAAC,KAAKD,SAAL,CAAeC,GAAf,CAAL,EAA0B;AACtBC,QAAAA,OAAO,CAACC,IAAR,qCAA0CF,GAA1C;AACH,OAJsB,CAKvB;;;AACA,aAAO,KAAKD,SAAL,CAAeC,GAAf,CAAP;AACH;AA/CL;;AAAA;AAAA;;AAiDAF,kBAAkB,CAACO,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAIT,kBAAV,GAAP;AAAyC,CAA5G;;AACAA,kBAAkB,CAACU,KAAnB,GAA2B,aAAcX,EAAE,CAACY,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEZ,kBAAT;AAA6Ba,EAAAA,OAAO,EAAEb,kBAAkB,CAACO,IAAzD;AAA+DO,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nexport class CoreSidebarService {\r\n    constructor() {\r\n        // Private\r\n        this._registry = {};\r\n    }\r\n    /**\r\n     * Get the sidebar with the given key\r\n     *\r\n     * @param key\r\n     * @returns {CoreSidebarComponent}\r\n     */\r\n    getSidebarRegistry(key) {\r\n        // Check if the sidebar registered\r\n        if (!this._registry[key]) {\r\n            console.warn(`The sidebar with the key '${key}' doesn't exist in the registry.`);\r\n            return;\r\n        }\r\n        // Return the sidebar\r\n        return this._registry[key];\r\n    }\r\n    /**\r\n     * Set the sidebar to the registry\r\n     *\r\n     * @param key\r\n     * @param sidebar\r\n     */\r\n    setSidebarRegistry(key, sidebar) {\r\n        // Check if the key already being used\r\n        if (this._registry[key]) {\r\n            console.error(`The sidebar with the key '${key}' already exists. Either unregister it first or use a unique key.`);\r\n            return;\r\n        }\r\n        // Set to the registry\r\n        this._registry[key] = sidebar;\r\n    }\r\n    /**\r\n     * Remove the sidebar from the registry\r\n     *\r\n     * @param key\r\n     */\r\n    removeSidebarRegistry(key) {\r\n        // Check if the sidebar registered\r\n        if (!this._registry[key]) {\r\n            console.warn(`The sidebar with the key '${key}' doesn't exist in the registry.`);\r\n        }\r\n        // Unregister the sidebar\r\n        delete this._registry[key];\r\n    }\r\n}\r\nCoreSidebarService.ɵfac = function CoreSidebarService_Factory(t) { return new (t || CoreSidebarService)(); };\r\nCoreSidebarService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CoreSidebarService, factory: CoreSidebarService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}